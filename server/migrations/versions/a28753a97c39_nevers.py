"""nevers

Revision ID: a28753a97c39
Revises: 646f36b59a8a
Create Date: 2023-05-05 13:05:39.128082

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "a28753a97c39"
down_revision = "646f36b59a8a"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("community_posts", sa.Column("post_id", sa.UUID(), nullable=False))
    op.drop_constraint("community_posts_id_fkey", "community_posts", type_="foreignkey")
    op.create_foreign_key(None, "community_posts", "posts", ["post_id"], ["id"])
    op.drop_column("community_posts", "id")
    op.add_column("user_posts", sa.Column("post_id", sa.UUID(), nullable=False))
    op.drop_constraint("user_posts_id_fkey", "user_posts", type_="foreignkey")
    op.create_foreign_key(None, "user_posts", "posts", ["post_id"], ["id"])
    op.drop_column("user_posts", "id")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "user_posts", sa.Column("id", sa.UUID(), autoincrement=False, nullable=False)
    )
    op.drop_constraint(None, "user_posts", type_="foreignkey")
    op.create_foreign_key("user_posts_id_fkey", "user_posts", "posts", ["id"], ["id"])
    op.drop_column("user_posts", "post_id")
    op.add_column(
        "community_posts",
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
    )
    op.drop_constraint(None, "community_posts", type_="foreignkey")
    op.create_foreign_key(
        "community_posts_id_fkey", "community_posts", "posts", ["id"], ["id"]
    )
    op.drop_column("community_posts", "post_id")
    # ### end Alembic commands ###
